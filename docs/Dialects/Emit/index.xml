<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>'emit' Dialect on CIRCT</title><link>https://circt.llvm.org/docs/Dialects/Emit/</link><description>Recent content in 'emit' Dialect on CIRCT</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0000</lastBuildDate><atom:link href="https://circt.llvm.org/docs/Dialects/Emit/index.xml" rel="self" type="application/rss+xml"/><item><title>Emission (Emit) Dialect Rationale</title><link>https://circt.llvm.org/docs/Dialects/Emit/RationaleEmit/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://circt.llvm.org/docs/Dialects/Emit/RationaleEmit/</guid><description>This document describes various design points of the emit dialect, why it is the way it is, and current status. This follows in the spirit of other MLIR Rationale docs.
Introduction The emit dialects controls the structure and formatting of the files emitted from CIRCT. It captures information about both SystemVerilog output files and generic collateral files. The ops are translated to output files in ExportVerilog. Presently, the dialect is intertwined with SystemVerilog - it can reference items in a design through symbols to emit references to them through SystemVerilog names in the output.</description></item></channel></rss>