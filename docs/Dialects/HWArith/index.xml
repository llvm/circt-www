<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>'hwarith' Dialect on CIRCT</title><link>https://circt.llvm.org/docs/Dialects/HWArith/</link><description>Recent content in 'hwarith' Dialect on CIRCT</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0000</lastBuildDate><atom:link href="https://circt.llvm.org/docs/Dialects/HWArith/index.xml" rel="self" type="application/rss+xml"/><item><title>HW Arith Dialect Rationale</title><link>https://circt.llvm.org/docs/Dialects/HWArith/RationaleHWArith/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://circt.llvm.org/docs/Dialects/HWArith/RationaleHWArith/</guid><description>This document describes the various design points of the HWArith dialect, a dialect that is used to represent bitwidth extending arithmetic. This follows in the spirit of other MLIR Rationale docs.
HW Arith Dialect Rationale Introduction Q&amp;amp;A Bit Width Rules Lowering Introduction The hwarith dialect provides a collection of operations that define typical integer arithmetic operations which are bitwidth extending. These semantics are expressed through return type inference rules that, based on the types of an operation and its input operands, infers the type of the result operand.</description></item></channel></rss>